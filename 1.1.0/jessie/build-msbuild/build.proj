<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <Import Project="..\..\..\build\common.props" />

    <PropertyGroup>
        <ImageTagVersion>1.1.0-msbuild-$(BuildNumber)</ImageTagVersion>
        <ImageRepo>aspnetcore-build-nightly</ImageRepo>
        <DockerBuildArgs>--build-arg aspnetCoreVersion=1.1.0-preview2-$(BuildNumber)</DockerBuildArgs>
    </PropertyGroup>

    <!-- define items that go into the build context -->
    <ItemGroup>
        <Context Include="NuGet.config" />
        <Context Include="Dockerfile" />
        <Context Include="$(NightlyPackageList)" Condition="Exists('$(NightlyPackageList)')">
            <Link>cache.project.json</Link>
        </Context>
    </ItemGroup>

    <Target Name="ValidateProperties">
        <!-- gatekeeper target to ensure required properties are present -->
        <ItemGroup>
            <ExpectedNightlyParams Include="NightlyPackageList" />
            <ExpectedNightlyParams Include="BuildNumber" />
        </ItemGroup>
        <Error Text="Missing property '%(ExpectedNightlyParams.Identity)'"
               Condition="'$(%(ExpectedNightlyParams.Identity))'==''"/>
        <Error Text="$(NightlyPackageList) does not exist"
               Condition="!Exists('$(NightlyPackageList)')"/>
    </Target>

    <Target Name="TestNightly" AfterTargets="Test">
        <!-- mounts local test folder and runs the test script -->
        <PropertyGroup>
            <_TestArgs Condition="'$(TEAMCITY_VERSION)'!=''"> -e TEAMCITY_VERSION=$(TEAMCITY_VERSION)</_TestArgs>
        </PropertyGroup>
        <Exec Command="docker run --rm -i $(_TestArgs) -v &quot;$(MSBuildThisFileDirectory)test:/test&quot; $(IntermediateTag) sh /test/test.sh"
              IgnoreStandardErrorWarningFormat="true" />
    </Target>

    <Target Name="Build"
            DependsOnTargets="ValidateProperties"
            Returns="@(Images)">
        <!--
        RunEachTargetSeparately=true ensures each target is always run, even if earlier targets fail.
        This is essential for ensuring build script doesn't leave behind bad images.
         -->
        <CallTarget Targets="$(BuildSteps)" RunEachTargetSeparately="True" />
    </Target>

    <Import Project="..\..\..\build\common.targets" />
</Project>