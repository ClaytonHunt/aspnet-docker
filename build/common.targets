<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

    <Target Name="DefaultBuild">
        <!--
        RunEachTargetSeparately=true ensures each target is always run, even if earlier targets fail.
        This is essential for ensuring build script doesn't leave behind bad images.
         -->
        <CallTarget Targets="$(DefaultBuildSteps)" RunEachTargetSeparately="true" />
    </Target>

    <Target Name="RunBuild" DependsOnTargets="Clean;CreateImage;Test;Tag" />

    <Target Name="Clean">
        <RemoveDir Directories="$(IntermediatePath)" />
    </Target>

    <Target Name="CreateImage">
        <MakeDir Directories="$(IntermediatePath)" />
        <Copy SourceFiles="@(Context)"
              DestinationFiles="@(Context -> '$(IntermediatePath)%(Link)')" />
        <Exec Command="docker build . --pull --force-rm -t $(IntermediateTag) $(DockerBuildArgs)"
              WorkingDirectory="$(IntermediatePath)"
              IgnoreStandardErrorWarningFormat="true" />
    </Target>

    <Target Name="Test" />

    <Target Name="Tag">
        <PropertyGroup>
            <ImageRegistry Condition="'$(ImageRegistry)'==''">testuser</ImageRegistry>
            <ImageRepo Condition="'$(ImageRepo)'==''">$(MSBuildProjectName)</ImageRepo>
            <ImageTag>$(ImageRegistry)/$(ImageRepo):$(ImageTagVersion)</ImageTag>
        </PropertyGroup>
        <Exec Command="docker tag $(IntermediateTag) $(ImageTag)" />
        <ItemGroup>
            <Images Include="$(ImageTag)" />
        </ItemGroup>
    </Target>

    <Target Name="BuildCleanup">
        <Exec Command="docker rmi $(IntermediateTag)"
              IgnoreExitCode="true"
              IgnoreStandardErrorWarningFormat="true" />
    </Target>
</Project>